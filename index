<!DOCTYPE html>
<html>
<head>
    <title>–ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ –†–µ–π–¥—ã</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
            background: #0a0a2a;
            color: white;
            font-family: Arial, sans-serif;
            overflow: hidden;
        }
        
        #game-container {
            width: 100%;
            height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }
        
        #game-canvas {
            border: 2px solid #00ffff;
            background: #000;
            max-width: 95%;
            max-height: 70vh;
        }
        
        .controls {
            margin-top: 20px;
            display: flex;
            gap: 10px;
        }
        
        button {
            background: #00ffff;
            color: #000;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
        }
        
        .info-panel {
            background: rgba(0, 0, 0, 0.7);
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div id="game-container">
        <div class="info-panel">
            <div>‚è±Ô∏è –í—Ä–µ–º—è: <span id="timer">15:00</span></div>
            <div>‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: <span id="health">100%</span></div>
            <div>üéØ –£—Ä–æ–Ω: <span id="damage">0</span></div>
        </div>
        
        <canvas id="game-canvas" width="800" height="600"></canvas>
        
        <div class="controls">
            <button id="attack-btn">‚ö° –ê—Ç–∞–∫–∞</button>
            <button id="shield-btn">üõ°Ô∏è –©–∏—Ç</button>
            <button id="boost-btn">üöÄ –£—Å–∫–æ—Ä–µ–Ω–∏–µ</button>
        </div>
        
        <div style="margin-top: 10px; text-align: center;">
            <small>üöÄ –ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ –†–µ–π–¥—ã - WebApp –≤–µ—Ä—Å–∏—è</small>
        </div>
    </div>

    <script>
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
        let tg = window.Telegram.WebApp;
        tg.expand();
        tg.enableClosingConfirmation();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–æ—Ç–∞
        const initData = tg.initDataUnsafe;
        const user = initData.user;
        
        // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        const canvas = document.getElementById('game-canvas');
        const ctx = canvas.getContext('2d');
        const timerElement = document.getElementById('timer');
        const healthElement = document.getElementById('health');
        const damageElement = document.getElementById('damage');
        
        // –ò–≥—Ä–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        let gameTime = 900; // 15 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        let playerHealth = 100;
        let totalDamage = 0;
        
        // –ü—Ä–æ—Å—Ç–∞—è –∏–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞
        function updateGame() {
            // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ñ–æ–Ω–∞
            ctx.fillStyle = '#000033';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∑–≤–µ–∑–¥
            ctx.fillStyle = '#ffffff';
            for (let i = 0; i < 50; i++) {
                ctx.fillRect(
                    Math.random() * canvas.width,
                    Math.random() * canvas.height,
                    2, 2
                );
            }
            
            // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–æ—Ä–∞–±–ª—è –∏–≥—Ä–æ–∫–∞
            ctx.fillStyle = '#00ffff';
            ctx.beginPath();
            ctx.moveTo(canvas.width/2, canvas.height - 50);
            ctx.lineTo(canvas.width/2 - 20, canvas.height - 20);
            ctx.lineTo(canvas.width/2 + 20, canvas.height - 20);
            ctx.closePath();
            ctx.fill();
            
            // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤—Ä–∞–≥–æ–≤
            ctx.fillStyle = '#ff4444';
            ctx.fillRect(100, 100, 30, 30);
            ctx.fillRect(300, 150, 30, 30);
            ctx.fillRect(500, 200, 30, 30);
        }
        
        // –¢–∞–π–º–µ—Ä –∏–≥—Ä—ã
        function updateTimer() {
            if (gameTime > 0) {
                gameTime--;
                const minutes = Math.floor(gameTime / 60);
                const seconds = gameTime % 60;
                timerElement.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
            }
        }
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
        document.getElementById('attack-btn').addEventListener('click', function() {
            totalDamage += Math.floor(Math.random() * 50) + 10;
            damageElement.textContent = totalDamage;
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –∞—Ç–∞–∫–∏
            ctx.fillStyle = '#ffff00';
            ctx.fillRect(canvas.width/2 - 5, canvas.height - 100, 10, 40);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç–∞
            tg.sendData(JSON.stringify({
                action: 'attack',
                damage: totalDamage,
                userId: user?.id
            }));
        });
        
        document.getElementById('shield-btn').addEventListener('click', function() {
            playerHealth = Math.min(100, playerHealth + 10);
            healthElement.textContent = playerHealth + '%';
            
            // –ê–Ω–∏–º–∞—Ü–∏—è —â–∏—Ç–∞
            ctx.strokeStyle = '#00ff00';
            ctx.lineWidth = 3;
            ctx.beginPath();
            ctx.arc(canvas.width/2, canvas.height - 35, 25, 0, Math.PI * 2);
            ctx.stroke();
        });
        
        document.getElementById('boost-btn').addEventListener('click', function() {
            // –ê–Ω–∏–º–∞—Ü–∏—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
            ctx.fillStyle = '#ff6600';
            for (let i = 0; i < 5; i++) {
                ctx.fillRect(
                    canvas.width/2 - 15 + i * 6,
                    canvas.height - 20,
                    4, 20
                );
            }
        });
        
        // –ò–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
        function gameLoop() {
            updateGame();
            requestAnimationFrame(gameLoop);
        }
        
        // –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
        gameLoop();
        setInterval(updateTimer, 1000);
        
        console.log('WebApp –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user);
    </script>
</body>
</html>
